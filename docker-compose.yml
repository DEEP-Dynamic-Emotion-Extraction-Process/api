# docker-compose.yml

services:
  # Serviço do Redis: Nosso message broker para o Celery
  redis:
    image: redis:7-alpine
    container_name: deep_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  # NOVO: Serviço do Banco de Dados MySQL
  db:
    image: mysql:8.0
    container_name: deep_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # Vem do .env
      MYSQL_DATABASE: ${DB_NAME}         # Vem do .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # Serviço da API Flask: Roda o servidor web Gunicorn
  api:
    container_name: deep_api
    build: .
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - local_uploads:/app/uploads # Volume para uploads locais
    env_file:
      - .env
    command: >
      sh -c "flask db upgrade && gunicorn --bind 0.0.0.0:5000 run:app"
    depends_on:
      - redis
      - db # Garante que o DB inicie antes da API

  # Serviço do Celery Worker: Roda o processo que consome as tarefas
  worker:
    container_name: deep_worker
    build: .
    restart: unless-stopped
    volumes:
      - .:/app
      - local_uploads:/app/uploads # Compartilha o mesmo volume
    env_file:
      - .env
    command: celery -A celery_worker.celery worker --loglevel=info
    depends_on:
      - redis
      - api

# NOVO: Define os volumes
volumes:
  mysql_data:
  local_uploads:
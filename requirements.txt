# --- Core Framework & Servidor WSGI ---
# Flask: O micro-framework principal da nossa API.
# Gunicorn: Servidor WSGI para rodar a aplicação em produção.
# python-dotenv: Para carregar variáveis de ambiente de um arquivo .env.
# Flask-Cors: Para permitir que o frontend acesse a API.
Flask==3.0.3
gunicorn==22.0.0
python-dotenv==1.0.1
Flask-Cors==4.0.1

# --- Banco de Dados & ORM ---
# Flask-SQLAlchemy: Integração do SQLAlchemy com o Flask.
# Flask-Migrate: Para realizar migrações de esquema do banco de dados com Alembic.
# PyMySQL: Driver para conectar ao banco de dados MySQL/RDS.
Flask-SQLAlchemy==3.1.1
Flask-Migrate==4.0.7
PyMySQL==1.1.1
cryptography==42.0.8

# --- Schemas (Serialização e Validação) ---
# Flask-Marshmallow: Integração do Marshmallow para criar schemas a partir dos modelos.
# marshmallow-sqlalchemy: Helper para o Flask-Marshmallow.
Flask-Marshmallow==1.3.0
marshmallow-sqlalchemy==1.0.0

# --- Autenticação ---
# Flask-JWT-Extended: Para lidar com autenticação baseada em JSON Web Tokens (JWT).
Flask-JWT-Extended==4.5.3

# --- Tarefas Assíncronas ---
# Celery: A biblioteca para executar tarefas pesadas em segundo plano.
# redis: O cliente Python para o Redis, que usaremos como nosso message broker.
celery==5.4.0
redis==5.0.5

# --- AWS SDK ---
# boto3: O SDK oficial da AWS para Python, para interagir com o S3.
boto3==1.34.120

# --- Processamento de Vídeo e Imagem ---
# opencv-python: Para ler os vídeos e extrair os frames.
opencv-python==4.10.0.82

# --- Machine Learning ---
# tensorflow: Para carregar e usar o modelo de análise de sentimento.
# numpy: Dependência fundamental para computação numérica (usado pelo TF e OpenCV).
# Pillow: Dependência para manipulação de imagens (usado pelo TF).
tensorflow==2.17.0
numpy==1.26.4
Pillow==10.3.0